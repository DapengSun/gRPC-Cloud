# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
import sys
sys.path.append('..')
from Redis import RedisHelper_pb2 as RedisHelper__pb2


class RedisHelperStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RedisCacheStr = channel.unary_unary(
        '/RedisHelper/RedisCacheStr',
        request_serializer=RedisHelper__pb2.RedisCacheStrRequest.SerializeToString,
        response_deserializer=RedisHelper__pb2.RedisCacheResponse.FromString,
        )
    self.GetSqlValue = channel.unary_unary(
        '/RedisHelper/GetSqlValue',
        request_serializer=RedisHelper__pb2.RedisCacheSQLRequest.SerializeToString,
        response_deserializer=RedisHelper__pb2.RedisCacheResponse.FromString,
        )


class RedisHelperServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RedisCacheStr(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSqlValue(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RedisHelperServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RedisCacheStr': grpc.unary_unary_rpc_method_handler(
          servicer.RedisCacheStr,
          request_deserializer=RedisHelper__pb2.RedisCacheStrRequest.FromString,
          response_serializer=RedisHelper__pb2.RedisCacheResponse.SerializeToString,
      ),
      'GetSqlValue': grpc.unary_unary_rpc_method_handler(
          servicer.GetSqlValue,
          request_deserializer=RedisHelper__pb2.RedisCacheSQLRequest.FromString,
          response_serializer=RedisHelper__pb2.RedisCacheResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'RedisHelper', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
